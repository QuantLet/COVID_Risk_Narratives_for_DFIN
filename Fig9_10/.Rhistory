library("readxl")
# path_Temp = ""
my_data <- read_excel("/Users/yutingchen/colorful_life/Research/Corona/data/Temp/Reg_narrative_gr_cccd.xlsx")
my_data$ConfirmedCases <- my_data$ConfirmedCases/1000000
my_data$ConfirmedDeaths <- my_data$ConfirmedDeaths/1000000
# use plm
library(plm)
# LM1 <- plm(formula = narrative ~ GovernmentResponseIndex + ConfirmedCases + ConfirmedDeaths, data = my_data, model="pooling", index=c("CountryName", "date"))
LM1 <- plm(formula = narrative ~ ConfirmedCases + ConfirmedDeaths, data = my_data, model="within",effect = "twoways", index=c("CountryName", "date"))
summary(LM1)
LM2 <- plm(formula = narrative ~ GovernmentResponseIndex + ConfirmedCases + ConfirmedDeaths, data = my_data, model="within",effect = "twoways", index=c("CountryName", "date"))
summary(LM2)
# Standard errors with HAC
library(sandwich)
library(lmtest)
C1<-coeftest(LM1, vcov=vcovHC(LM1,type="HC0",cluster="group"))
C2<-coeftest(LM2, vcov=vcovHC(LM2,type="HC0",cluster="group"))
library(stargazer)
stargazer(C1,C2,align=TRUE, type = "html",
column.sep.width = "-15pt",out="Reg_narrative_gr_cccd.html")
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
View(model2)
View(model2)
View(model2)
model2[["call"]][["exogen"]]
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
coeftest(model2, vcov. = NeweyWest(model2, lag = selected_lag))
coeftest(model2, vcov. = sandwich())
coeftest(model2, vcov. = sandwich)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
Grangervix <- causality(model2, cause = variable1, vcov.=NeweyWest(model2, lag = selected_lag)) # vcov.=vcovHC(model2)
Grangervix
Grangernarra <- causality(model2, cause = variable2, vcov.=NeweyWest(model2, lag = selected_lag))
Grangernarra
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
View(risknarra)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
View(my_data)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
# the coeffients
coeftest(model2, vcov. = sandwich ) #, vcov. = sandwich
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
summary(ols1)
risknarra_1 <- c(0,risknarra[1:nrow(risknarra)-1])
summary(ols1)
ols2 <- lm(vix~risknarra_1)
summary(ols2)
risknarra_1 <- c(0,risknarra[1:nrow(risknarra)-1])
risknarra_1 <- lag(risknarra)
ols2 <- lm(vix~risknarra_1)
summary(ols2)
source("~/GIT/GIT_corona/Corona_Narrative_Risk/Data_analysis/VAR_for_risknarratives.R", echo=TRUE)
rm(list = ls())
library(tsDyn)
library(vars)
library(urca)
library(forecast)
library(tidyverse)
library(dplyr)
library("readxl")
rm(list = ls(all.names = TRUE))
my_data <- read_excel("Data_VECM_RiskNarra_VIX.xlsx",guess_max = 10000)
setwd("/Users/yutingchen/GIT/COVID_Risk_Narratives_for_DFIN/Fig9-10")
my_data <- read_excel("Data_VECM_RiskNarra_VIX.xlsx",guess_max = 10000)
View(my_data)
my_data <- my_data %>% drop_na()
risknarra_d <- my_data[,"RiskNarratives"]
vix_d <- my_data[,"VIX"]
sp_d <- my_data[,"SP500"]
autoplot(cbind(ts(risknarra_d),ts(vix_d)))
rm(list = ls(all.names = TRUE))
setwd("/Users/yutingchen/GIT/COVID_Risk_Narratives_for_DFIN/Fig9-10")
my_data <- read_excel("Data_VECM_RiskNarra_VIX.xlsx",guess_max = 10000)
# convert to monthly for Fig 10, uncomment this part
# Narramonthly <- my_data %>%mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%group_by(year, month) %>% summarise(total = sum(RiskNarratives))
# Narramonthly <- rename(Narramonthly, RiskNarratives = total)
# VIXmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
#   group_by(year, month)%>%summarise(total = mean(VIX,na.rm=TRUE))
# VIXmonthly   <-rename(VIXmonthly, VIX = total)
# SPmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
#   group_by(year, month)%>%summarise(total = mean(SP500,na.rm=TRUE))
# SPmonthly   <-rename(SPmonthly, SP500 = total)
# my_data <- data.frame(Narramonthly$month, Narramonthly$RiskNarratives, VIXmonthly$VIX, SPmonthly$SP500)
# colnames(my_data) <- c("date", "RiskNarratives", "VIX","SP500")
# drop missing rows
my_data <- my_data %>% drop_na()
risknarra_d <- my_data[,"RiskNarratives"]
vix_d <- my_data[,"VIX"]
sp_d <- my_data[,"SP500"]
### stationarity test
library(tseries)
adf.test(risknarra_d)
adf.test(sp_d)
adf.test(vix_d)
pp.test(risknarra_d)
pp.test(sp_d)
pp.test(vix_d)
### create the system
dset_d <- cbind(risknarra_d,vix_d)
# dset_d <- cbind(vix_d,risknarra_d)
# dset_d <- cbind(risknarra_d,vix_d,sp_d)
### select the optimal number of lags
lagselect <- VARselect(dset_d,lag.max = 6, type = "const")
selected_lags <- lagselect$selection
# define a function to get the mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# get the mode of the number of lags.
selected_lag <- getmode(selected_lags) - 1 # need to have "minus one", because it's difference
print(selected_lags)
print(selected_lag)
cointest_trace <- ca.jo(dset_d, type = "trace", ecdet = "const", K = selected_lag)
summary(cointest_trace)
cointest_eigen <- ca.jo(dset_d, type = "eigen", ecdet = "const", K = selected_lag)
summary(cointest_eigen)
# select the number of co-integration
num_coint = 1
### build the VECM model
model1 <- VECM(dset_d,selected_lag,r=num_coint,estim = ("2OLS"))
summary(model1)
# diagnostic tests
model1var <- vec2var(cointest_trace,r = num_coint)
# IRF
nahead <- 10
IRFvix <- irf(model1var, impulse = "vix_d", response = "risknarra_d", n.ahead =nahead, boot = TRUE)
plot(IRFvix,ylab = "Risk Narrative Intensity", main = "VIX's shock to Risk Narrative Intensity")
IRFnarra <- irf(model1var, impulse = "risknarra_d", response = "vix_d", n.ahead =nahead, boot = TRUE)
plot(IRFnarra,ylab = "VIX", main = "Risk Narratives' shock to VIX")
IRFsp <- irf(model1var, impulse = "risknarra_d", response = "sp_d", n.ahead =25, boot = TRUE)
plot(IRFsp,ylab = "Risk Narrative Intensity", main = "SP500' shock to Risk Narrative Intensity")
# standard VAR
model2 <- VAR(dset_d,p= selected_lag+1, type = "const", season = NULL, exog = NULL)
# IRFs
IRFvix <- irf(model2, impulse = "vix_d", response = "risknarra_d", n.ahead =10, boot = TRUE)
jpeg("IRFvix.jpg", width = 800, height = 350)
plot(IRFvix,ylab = "Risk Narrative Intensity", main = "VIX's shock to Risk Narrative Intensity", sub = NA,mar = c(2, 5, 0, 5),oma=c(2,0,3,0),cex.main=3)
dev.off()
jpeg("IRFnarra.jpg", width = 800, height = 350)
IRFnarra <- irf(model2, impulse = "risknarra_d", response = "vix_d", n.ahead =10, boot = TRUE)
plot(IRFnarra,ylab = "VIX", main = "Risk Narratives' shock to VIX",sub = NA,mar = c(2, 5, 0, 5),oma=c(2,0,3,0),cex.main=3)
dev.off()
### This program generates Figure 9 and 10
### Author: Yuting Chen
library(tsDyn)
library(vars)
library(urca)
library(forecast)
library(tidyverse)
library(dplyr)
library("readxl")
rm(list = ls(all.names = TRUE))
setwd("/Users/yutingchen/GIT/COVID_Risk_Narratives_for_DFIN/Fig9-10")
my_data <- read_excel("Data_VECM_RiskNarra_VIX.xlsx",guess_max = 10000)
# convert to monthly for Fig 10, uncomment this part
Narramonthly <- my_data %>%mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%group_by(year, month) %>% summarise(total = sum(RiskNarratives))
Narramonthly <- rename(Narramonthly, RiskNarratives = total)
VIXmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
group_by(year, month)%>%summarise(total = mean(VIX,na.rm=TRUE))
VIXmonthly   <-rename(VIXmonthly, VIX = total)
SPmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
group_by(year, month)%>%summarise(total = mean(SP500,na.rm=TRUE))
SPmonthly   <-rename(SPmonthly, SP500 = total)
my_data <- data.frame(Narramonthly$month, Narramonthly$RiskNarratives, VIXmonthly$VIX, SPmonthly$SP500)
colnames(my_data) <- c("date", "RiskNarratives", "VIX","SP500")
# drop missing rows
my_data <- my_data %>% drop_na()
risknarra_d <- my_data[,"RiskNarratives"]
vix_d <- my_data[,"VIX"]
sp_d <- my_data[,"SP500"]
### stationarity test
library(tseries)
adf.test(risknarra_d)
adf.test(sp_d)
adf.test(vix_d)
pp.test(risknarra_d)
pp.test(sp_d)
pp.test(vix_d)
### create the system
dset_d <- cbind(risknarra_d,vix_d)
# dset_d <- cbind(vix_d,risknarra_d)
# dset_d <- cbind(risknarra_d,vix_d,sp_d)
### select the optimal number of lags
lagselect <- VARselect(dset_d,lag.max = 6, type = "const")
selected_lags <- lagselect$selection
# define a function to get the mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# get the mode of the number of lags.
selected_lag <- getmode(selected_lags) - 1 # need to have "minus one", because it's difference
print(selected_lags)
print(selected_lag)
cointest_trace <- ca.jo(dset_d, type = "trace", ecdet = "const", K = selected_lag)
summary(cointest_trace)
cointest_eigen <- ca.jo(dset_d, type = "eigen", ecdet = "const", K = selected_lag)
summary(cointest_eigen)
# select the number of co-integration
num_coint = 1
### build the VECM model
model1 <- VECM(dset_d,selected_lag,r=num_coint,estim = ("2OLS"))
summary(model1)
# diagnostic tests
model1var <- vec2var(cointest_trace,r = num_coint)
# IRF
nahead <- 10
IRFvix <- irf(model1var, impulse = "vix_d", response = "risknarra_d", n.ahead =nahead, boot = TRUE)
plot(IRFvix,ylab = "Risk Narrative Intensity", main = "VIX's shock to Risk Narrative Intensity")
IRFnarra <- irf(model1var, impulse = "risknarra_d", response = "vix_d", n.ahead =nahead, boot = TRUE)
plot(IRFnarra,ylab = "VIX", main = "Risk Narratives' shock to VIX")
IRFsp <- irf(model1var, impulse = "risknarra_d", response = "sp_d", n.ahead =25, boot = TRUE)
plot(IRFsp,ylab = "Risk Narrative Intensity", main = "SP500' shock to Risk Narrative Intensity")
# standard VAR
model2 <- VAR(dset_d,p= selected_lag+1, type = "const", season = NULL, exog = NULL)
# IRFs
IRFvix <- irf(model2, impulse = "vix_d", response = "risknarra_d", n.ahead =10, boot = TRUE)
jpeg("IRFvix.jpg", width = 800, height = 350)
plot(IRFvix,ylab = "Risk Narrative Intensity", main = "VIX's shock to Risk Narrative Intensity", sub = NA,mar = c(2, 5, 0, 5),oma=c(2,0,3,0),cex.main=3)
dev.off()
jpeg("IRFnarra.jpg", width = 800, height = 350)
IRFnarra <- irf(model2, impulse = "risknarra_d", response = "vix_d", n.ahead =10, boot = TRUE)
plot(IRFnarra,ylab = "VIX", main = "Risk Narratives' shock to VIX",sub = NA,mar = c(2, 5, 0, 5),oma=c(2,0,3,0),cex.main=3)
dev.off()
### This program generates Figure 9 and 10
### Author: Yuting Chen
library(tsDyn)
library(vars)
library(urca)
library(forecast)
library(tidyverse)
library(dplyr)
library("readxl")
rm(list = ls(all.names = TRUE))
setwd("/Users/yutingchen/GIT/COVID_Risk_Narratives_for_DFIN/Fig9-10")
my_data <- read_excel("Data_VECM_RiskNarra_VIX.xlsx",guess_max = 10000)
# convert to monthly for Fig 10, uncomment this part
Narramonthly <- my_data %>%mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%group_by(year, month) %>% summarise(total = sum(RiskNarratives))
Narramonthly <- rename(Narramonthly, RiskNarratives = total)
VIXmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
group_by(year, month)%>%summarise(total = mean(VIX,na.rm=TRUE))
VIXmonthly   <-rename(VIXmonthly, VIX = total)
SPmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
group_by(year, month)%>%summarise(total = mean(SP500,na.rm=TRUE))
SPmonthly   <-rename(SPmonthly, SP500 = total)
my_data <- data.frame(Narramonthly$month, Narramonthly$RiskNarratives, VIXmonthly$VIX, SPmonthly$SP500)
colnames(my_data) <- c("date", "RiskNarratives", "VIX","SP500")
# drop missing rows
my_data <- my_data %>% drop_na()
risknarra_d <- my_data[,"RiskNarratives"]
vix_d <- my_data[,"VIX"]
sp_d <- my_data[,"SP500"]
### stationarity test
library(tseries)
adf.test(risknarra_d)
adf.test(sp_d)
adf.test(vix_d)
pp.test(risknarra_d)
pp.test(sp_d)
pp.test(vix_d)
### create the system
dset_d <- cbind(risknarra_d,vix_d)
# dset_d <- cbind(vix_d,risknarra_d)
# dset_d <- cbind(risknarra_d,vix_d,sp_d)
### select the optimal number of lags
lagselect <- VARselect(dset_d,lag.max = 6, type = "const")
selected_lags <- lagselect$selection
# define a function to get the mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# get the mode of the number of lags.
selected_lag <- getmode(selected_lags) - 1 # need to have "minus one", because it's difference
print(selected_lags)
print(selected_lag)
cointest_trace <- ca.jo(dset_d, type = "trace", ecdet = "const", K = selected_lag)
summary(cointest_trace)
cointest_eigen <- ca.jo(dset_d, type = "eigen", ecdet = "const", K = selected_lag)
summary(cointest_eigen)
# select the number of co-integration
num_coint = 1
### build the VECM model
model1 <- VECM(dset_d,selected_lag,r=num_coint,estim = ("2OLS"))
summary(model1)
# diagnostic tests
model1var <- vec2var(cointest_trace,r = num_coint)
# IRF
nahead <- 10
IRFvix <- irf(model1var, impulse = "vix_d", response = "risknarra_d", n.ahead =nahead, boot = TRUE)
plot(IRFvix,ylab = "Risk Narrative Intensity", main = "VIX's shock to Risk Narrative Intensity")
IRFnarra <- irf(model1var, impulse = "risknarra_d", response = "vix_d", n.ahead =nahead, boot = TRUE)
plot(IRFnarra,ylab = "VIX", main = "Risk Narratives' shock to VIX")
IRFsp <- irf(model1var, impulse = "risknarra_d", response = "sp_d", n.ahead =25, boot = TRUE)
plot(IRFsp,ylab = "Risk Narrative Intensity", main = "SP500' shock to Risk Narrative Intensity")
# standard VAR
model2 <- VAR(dset_d,p= selected_lag+1, type = "const", season = NULL, exog = NULL)
# IRFs
IRFvix <- irf(model2, impulse = "vix_d", response = "risknarra_d", n.ahead =10, boot = TRUE)
jpeg("IRFvix.jpg", width = 800, height = 350)
plot(IRFvix,ylab = "Risk Narrative Intensity", main = "VIX's shock to Risk Narrative Intensity", sub = NA,mar = c(2, 5, 0, 5),oma=c(2,0,3,0),cex.main=3)
dev.off()
jpeg("IRFnarra.jpg", width = 800, height = 350)
IRFnarra <- irf(model2, impulse = "risknarra_d", response = "vix_d", n.ahead =10, boot = TRUE)
plot(IRFnarra,ylab = "VIX", main = "Risk Narratives' shock to VIX",sub = NA,mar = c(2, 5, 0, 5),oma=c(2,0,3,0),cex.main=3)
dev.off()
# reference: https://www.youtube.com/watch?v=ZF6Ew9L7N_8&list=PLEuzmtv9IuT_vg5oE0lQyZR-wgbVeGztt&index=27
# install.packages("tsDyn")
library(tsDyn)
library(vars)
# JOHANSEN COINTEGRATION
library(urca)
library(forecast)
library(tidyverse)
### load the data
rm(list = ls(all.names = TRUE))
library("readxl")
my_data <- read_excel("/Users/yutingchen/colorful_life/Research/Corona/data/Temp/Data_VECM_RiskNarra_VIX.xlsx",guess_max = 10000)
# convert to monthly when necessary
library(dplyr)
Narramonthly <- my_data %>%mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%group_by(year, month) %>% summarise(total = sum(RiskNarratives))
Narramonthly <- rename(Narramonthly, RiskNarratives = total)
VIXmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
group_by(year, month)%>%summarise(total = mean(VIX,na.rm=TRUE))
# reference: https://www.youtube.com/watch?v=ZF6Ew9L7N_8&list=PLEuzmtv9IuT_vg5oE0lQyZR-wgbVeGztt&index=27
# install.packages("tsDyn")
library(tsDyn)
library(vars)
# JOHANSEN COINTEGRATION
library(urca)
library(forecast)
library(tidyverse)
### load the data
rm(list = ls(all.names = TRUE))
library("readxl")
my_data <- read_excel("/Users/yutingchen/colorful_life/Research/Corona/data/Temp/Data_VECM_RiskNarra_VIX.xlsx",guess_max = 10000)
# convert to monthly when necessary
library(dplyr)
Narramonthly <- my_data %>%mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%group_by(year, month) %>% summarise(total = sum(RiskNarratives))
Narramonthly <- rename(Narramonthly, RiskNarratives = total)
VIXmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
group_by(year, month)%>%summarise(total = mean(VIX,na.rm=TRUE))
rlang::last_error()
### This program generates Figure 9 and 10
### Author: Yuting Chen
library(tsDyn)
library(vars)
library(urca)
library(forecast)
library(tidyverse)
library(dplyr)
library("readxl")
rm(list = ls(all.names = TRUE))
setwd("/Users/yutingchen/GIT/COVID_Risk_Narratives_for_DFIN/Fig9-10")
my_data <- read_excel("Data_VECM_RiskNarra_VIX.xlsx",guess_max = 10000)
# convert to monthly for Fig 10, uncomment this part
Narramonthly <- my_data %>%mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%group_by(year, month) %>% summarise(total = sum(RiskNarratives))
Narramonthly <- rename(Narramonthly, RiskNarratives = total)
VIXmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
group_by(year, month)%>%summarise(total = mean(VIX,na.rm=TRUE))
VIXmonthly   <-rename(VIXmonthly, VIX = total)
SPmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
group_by(year, month)%>%summarise(total = mean(SP500,na.rm=TRUE))
SPmonthly   <-rename(SPmonthly, SP500 = total)
my_data <- data.frame(Narramonthly$month, Narramonthly$RiskNarratives, VIXmonthly$VIX, SPmonthly$SP500)
colnames(my_data) <- c("date", "RiskNarratives", "VIX","SP500")
# drop missing rows
my_data <- my_data %>% drop_na()
risknarra_d <- my_data[,"RiskNarratives"]
vix_d <- my_data[,"VIX"]
sp_d <- my_data[,"SP500"]
### stationarity test
library(tseries)
adf.test(risknarra_d)
adf.test(sp_d)
adf.test(vix_d)
pp.test(risknarra_d)
pp.test(sp_d)
pp.test(vix_d)
### create the system
dset_d <- cbind(risknarra_d,vix_d)
# dset_d <- cbind(vix_d,risknarra_d)
# dset_d <- cbind(risknarra_d,vix_d,sp_d)
### select the optimal number of lags
lagselect <- VARselect(dset_d,lag.max = 6, type = "const")
selected_lags <- lagselect$selection
# define a function to get the mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# get the mode of the number of lags.
selected_lag <- getmode(selected_lags) - 1 # need to have "minus one", because it's difference
print(selected_lags)
print(selected_lag)
cointest_trace <- ca.jo(dset_d, type = "trace", ecdet = "const", K = selected_lag)
summary(cointest_trace)
cointest_eigen <- ca.jo(dset_d, type = "eigen", ecdet = "const", K = selected_lag)
summary(cointest_eigen)
# select the number of co-integration
num_coint = 1
### build the VECM model
model1 <- VECM(dset_d,selected_lag,r=num_coint,estim = ("2OLS"))
summary(model1)
# diagnostic tests
model1var <- vec2var(cointest_trace,r = num_coint)
# IRF
nahead <- 10
IRFvix <- irf(model1var, impulse = "vix_d", response = "risknarra_d", n.ahead =nahead, boot = TRUE)
plot(IRFvix,ylab = "Risk Narrative Intensity", main = "VIX's shock to Risk Narrative Intensity")
IRFnarra <- irf(model1var, impulse = "risknarra_d", response = "vix_d", n.ahead =nahead, boot = TRUE)
plot(IRFnarra,ylab = "VIX", main = "Risk Narratives' shock to VIX")
IRFsp <- irf(model1var, impulse = "risknarra_d", response = "sp_d", n.ahead =25, boot = TRUE)
plot(IRFsp,ylab = "Risk Narrative Intensity", main = "SP500' shock to Risk Narrative Intensity")
# standard VAR
model2 <- VAR(dset_d,p= selected_lag+1, type = "const", season = NULL, exog = NULL)
# IRFs
IRFvix <- irf(model2, impulse = "vix_d", response = "risknarra_d", n.ahead =10, boot = TRUE)
jpeg("IRFvix.jpg", width = 800, height = 350)
plot(IRFvix,ylab = "Risk Narrative Intensity", main = "VIX's shock to Risk Narrative Intensity", sub = NA,mar = c(2, 5, 0, 5),oma=c(2,0,3,0),cex.main=3)
dev.off()
jpeg("IRFnarra.jpg", width = 800, height = 350)
IRFnarra <- irf(model2, impulse = "risknarra_d", response = "vix_d", n.ahead =10, boot = TRUE)
plot(IRFnarra,ylab = "VIX", main = "Risk Narratives' shock to VIX",sub = NA,mar = c(2, 5, 0, 5),oma=c(2,0,3,0),cex.main=3)
dev.off()
IRFvix <- irf(model1var, impulse = "vix_d", response = "risknarra_d", n.ahead =nahead, boot = TRUE)
IRFvix <- irf(model1var, impulse = "VIX", response = "RiskNarratives", n.ahead =nahead, boot = TRUE)
plot(IRFvix,ylab = "Risk Narrative Intensity", main = "VIX's shock to Risk Narrative Intensity")
# reference: https://www.youtube.com/watch?v=ZF6Ew9L7N_8&list=PLEuzmtv9IuT_vg5oE0lQyZR-wgbVeGztt&index=27
# install.packages("tsDyn")
library(tsDyn)
library(vars)
# JOHANSEN COINTEGRATION
library(urca)
library(forecast)
library(tidyverse)
### load the data
rm(list = ls(all.names = TRUE))
library("readxl")
my_data <- read_excel("/Users/yutingchen/colorful_life/Research/Corona/data/Temp/Data_VECM_RiskNarra_VIX.xlsx",guess_max = 10000)
# convert to monthly when necessary
library(dplyr)
Narramonthly <- my_data %>%mutate(month = format(date, "%m"), year = format(date, "%Y")) %>%group_by(year, month) %>% summarise(total = sum(RiskNarratives))
Narramonthly <- rename(Narramonthly, RiskNarratives = total)
VIXmonthly   <- my_data %>%mutate(year = year(date), month = month(date)) %>%
group_by(year, month)%>%summarise(total = mean(VIX,na.rm=TRUE))
